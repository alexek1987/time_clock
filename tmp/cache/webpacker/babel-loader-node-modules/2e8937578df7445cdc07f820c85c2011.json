{"ast":null,"code":"function fetchData() {\n  fetch('http://localhost:3000/api/v1/jobs/1').then(function (response) {\n    if (!response.ok) {\n      throw Error('An error occurred. Please try again.');\n    }\n\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n    var position = data.position;\n    document.querySelector('#position').innerHTML = \"<h3>\".concat(position, \"</h3>\");\n    var time_data = data.shifts.map(function (position) {\n      return \"<p>shifts data: \".concat(position.shifts.clock_in, \"</p>\");\n    }); // console.log(time_data)\n\n    document.querySelector(\"#app\").insertAdjacentHTML('afterbegin', time_data);\n  })[\"catch\"](function (error) {\n    console.log(error);\n  });\n}\n\nfetchData();","map":{"version":3,"sources":["/Users/alexander/code/alexek1987/job_api/app/javascript/includes/script.js"],"names":["fetchData","fetch","then","response","ok","Error","json","data","console","log","position","document","querySelector","innerHTML","time_data","shifts","map","clock_in","insertAdjacentHTML","error"],"mappings":"AAAA,SAASA,SAAT,GAAqB;AACnBC,EAAAA,KAAK,CAAC,qCAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ,EAAI;AAChB,QAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,YAAMC,KAAK,CAAC,sCAAD,CAAX;AACD;;AACD,WAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,GAND,EAMGJ,IANH,CAMQ,UAAAK,IAAI,EAAI;AAEhBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,QAAIG,QAAQ,GAAGH,IAAI,CAACG,QAApB;AACAC,IAAAA,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,SAApC,iBAAuDH,QAAvD;AAGA,QAAMI,SAAS,GAAGP,IAAI,CAACQ,MAAL,CAAYC,GAAZ,CAAgB,UAAAN,QAAQ,EAAI;AAC5C,uCAA0BA,QAAQ,CAACK,MAAT,CAAgBE,QAA1C;AACC,KAFe,CAAlB,CARgB,CAWd;;AACAN,IAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BM,kBAA/B,CAAkD,YAAlD,EAA+DJ,SAA/D;AAGD,GArBD,WAqBS,UAAAK,KAAK,EAAI;AAChBX,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,GAvBD;AAwBD;;AAEDnB,SAAS","sourcesContent":["function fetchData() {\n  fetch('http://localhost:3000/api/v1/jobs/1')\n  .then(response => {\n    if (!response.ok) {\n      throw Error('An error occurred. Please try again.')\n    }\n    return response.json()\n  }).then(data => {\n\n  console.log(data);\n\n  var position = data.position;\n  document.querySelector('#position').innerHTML = `<h3>${position}</h3>` ;\n\n\n  const time_data = data.shifts.map(position => {\n    return `<p>shifts data: ${position.shifts.clock_in}</p>`\n    })\n    // console.log(time_data)\n    document.querySelector(\"#app\").insertAdjacentHTML('afterbegin',time_data);\n\n\n  }).catch(error => {\n    console.log(error)\n  });\n}\n\nfetchData()"]},"metadata":{},"sourceType":"module"}